<section class="mt-20 p-6 border-t border-gray-200 dark:border-gray-700">
  <h2 class="text-xl font-semibold mb-6 text-gray-900 dark:text-gray-100">Join the conversation</h2>
<div id="giscus-container" class="min-h-[300px]"></div>

<script>
  const loadGiscus = (theme) => {
    const script = document.createElement('script');
    script.src = 'https://giscus.app/client.js';
    script.setAttribute('data-repo', 'LukasRennhofer/lrdev.me');
    script.setAttribute('data-repo-id', 'R_kgDOO6teFQ');
    script.setAttribute('data-category', 'Comments');
    script.setAttribute('data-category-id', 'DIC_kwDOO6teFc4CriGm');
    script.setAttribute('data-mapping', 'pathname');
    script.setAttribute('data-strict', '0');
    script.setAttribute('data-reactions-enabled', '1');
    script.setAttribute('data-emit-metadata', '0');
    script.setAttribute('data-input-position', 'top');
    script.setAttribute('data-theme', theme);
    script.setAttribute('data-lang', 'en');
    script.setAttribute('crossorigin', 'anonymous');
    script.async = true;

    const container = document.getElementById('giscus-container');
    if (container) {
      container.innerHTML = '';
      container.appendChild(script);
    }
  };

  const getTheme = () =>
    document.documentElement.classList.contains('dark') ? 'dark_dimmed' : 'light_tritanopia';

  // Load Giscus with initial theme
  loadGiscus(getTheme());

  // Watch for theme change
  const observer = new MutationObserver(() => {
    const iframe = document.querySelector('iframe.giscus-frame');
    if (iframe) {
      iframe.contentWindow?.postMessage(
        {
          giscus: {
            setConfig: {
              theme: getTheme(),
            },
          },
        },
        'https://giscus.app'
      );
    }
  });

  observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
</script>

</section>
